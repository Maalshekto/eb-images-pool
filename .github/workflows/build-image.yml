name: Build and Push Docker Image

on:
  push:
    branches:
      - main
    # Trigger only if changes are made in the container-apps directory
    paths:
      - 'container-apps/**'  
    # Ignore new folders

  workflow_dispatch:  # Allows manual execution of the workflow
  workflow_run:
    workflows: ["Deploy GHEB Infrastructure"]
    types:
      - completed
jobs:
  build:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'new folder')"  # Prevent if new folder added

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Configure AWS credentials using the action
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1  # Remplacez par votre rÃ©gion

      # Log in to AWS ECR
      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2
      
      # Get AWS Account ID
      - name: Get AWS Account ID
        id: get_account_id
        run: |
          ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          echo "ACCOUNT_ID=$ACCOUNT_ID" >> $GITHUB_ENV
      
      # Check if triggered by "Deploy GHEB Infrastructure" manually
      - name: Check if triggered by "Deploy GHEB Infrastructure" manually
        id: check_manual_trigger
        run: |
          if [[ "${{ github.event.workflow_run.event }}" == "workflow_dispatch" ]]; then
            echo "manual_trigger=true" >> $GITHUB_ENV
          else
            echo "manual_trigger=false" >> $GITHUB_ENV
          fi

      # Get modified directories or all directories if triggered manually
      - name: Get directories
        id: get_dirs
        run: |
          if [[ "${{ env.manual_trigger }}" == "true" ]]; then
            # List all directories in 'container-apps'
            DIRS=$(ls -d container-apps/*/ | awk -F/ '{print $2}')
          else
            # Compare with the previous commit and list modified directories
            DIRS=$(git diff --name-only HEAD^ -- container-apps/ | awk -F/ '{print $2}' | sort -u)
          fi
          if [[ -z "$DIRS" ]]; then
            echo "No directories found."
            echo "dirs=" >> $GITHUB_ENV
          else
            echo "$DIRS" > dirs.txt
            echo "dirs=$(<dirs.txt)" >> $GITHUB_ENV
          fi
      # Build and push Docker images for each application in the container-apps directory
      - name: Build and push Docker images
        run: |
          IMAGE_TAG="${{ github.sha }}-${{ github.run_id }}"  # Create a tag based on the commit SHA and the run ID
           # Loop through all directories in 'container-apps'
          for dir in ${{ env.dirs }}; do
            IMAGE_NAME="${{ env.ACCOUNT_ID }}.dkr.ecr.eu-west-1.amazonaws.com/$(basename ${dir})"
            echo "Building and pushing $IMAGE_NAME:$IMAGE_TAG"
      
            # Build the Docker image with a unique tag
            docker build -t $IMAGE_NAME:$IMAGE_TAG "container-apps/$dir"
      
            # Push the image with the unique tag to ECR
            docker push $IMAGE_NAME:$IMAGE_TAG
          done