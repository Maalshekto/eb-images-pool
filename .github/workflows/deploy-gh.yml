name: Deploy GHEB Infrastructure

on:
  push:
    branches:
      - main  # Triggers the workflow on push to the main branch
    paths:
      - 'main.tf'  # Trigger if the main.tf file is modified
      - 'container-apps/*/' # Trigger if container-apps get a new folder

  workflow_dispatch:  # Allows manual execution of the workflow

jobs:
  deploy:
    runs-on: ubuntu-latest  # Specifies the environment to run the job

    steps:
      # Checks out the code from the repository
      - name: Checkout code
        uses: actions/checkout@v4  

      - name: Generate app_dirs.txt
        run: |
          # Vider le fichier avant d'ajouter les nouveaux noms de dossier
          > app_dirs.txt
          
          # Parcourir les sous-dossiers et ajouter ceux qui contiennent un Dockerfile
          for dir in container-apps/*; do
            if [ -d "$dir" ] && [ -f "$dir/Dockerfile" ]; then
              echo "$(basename "$dir")" >> app_dirs.txt
            fi
          done
          
      # Sets up Terraform in the workflow
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3  
        with:
          terraform_version: 1.9.7  # Specify the Terraform version to use
        
      # Initializes Terraform and prepares the environment
      - name: Terraform Init 
        env:
          AWS_ACCESS_KEY_ID: "${{ secrets.AWS_ACCESS_KEY_ID }}"  # AWS credentials from secrets
          AWS_SECRET_ACCESS_KEY: "${{ secrets.AWS_SECRET_ACCESS_KEY }}"  # AWS credentials from secrets
        run: terraform init  

      # Creates an execution plan for Terraform
      - name: Terraform Plan
        env:
          AWS_ACCESS_KEY_ID: "${{ secrets.AWS_ACCESS_KEY_ID }}"  # AWS credentials from secrets
          AWS_SECRET_ACCESS_KEY: "${{ secrets.AWS_SECRET_ACCESS_KEY }}"  # AWS credentials from secrets
        run: terraform plan  

      # Applies the Terraform plan to create or update the infrastructure
      - name: Terraform Apply
        env:
          AWS_ACCESS_KEY_ID: "${{ secrets.AWS_ACCESS_KEY_ID }}"  # AWS credentials from secrets
          AWS_SECRET_ACCESS_KEY: "${{ secrets.AWS_SECRET_ACCESS_KEY }}"  # AWS credentials from secrets
        run: terraform apply -auto-approve  # Applies the changes without confirmation